# -*- coding: utf-8 -*-
"""Pandas: conhecendo a biblioteca Pandas: conhecendo a biblioteca

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OOP4oSJ04ymxnHPKMpQewzNoJQYas7Px

# Conhecendo a base de dados (AULA 1)

Descrição

A base de dados que vamos utilizar para desenvolver o projeto é uma base com dados de diferentes tipos de imóveis do Rio de Janeiro, como apartamento, casas, comércios, dentre outros.

Nessa base, nós vamos encontrar os valores dos aluguéis de cada imóvel, condomínio, IPTU e também suas características, como: quantidade de quartos, suítes, vagas de garagem, etc.

Link para acessar a base de dados: aluguel.csv (https://raw.githubusercontent.com/alura-cursos/pandas-conhecendo-a-biblioteca/main/base-de-dados/aluguel.csv)

## Importando os dados
"""

import pandas as pd
import matplotlib.pyplot as plt

url ='https://raw.githubusercontent.com/alura-cursos/pandas-conhecendo-a-biblioteca/main/base-de-dados/aluguel.csv'
pd.read_csv(url)

pd.read_csv(url, sep=';') # "sep=';' = Separa por ; os itens da tabela.

dados = pd.read_csv(url, sep=';') # "sep=';' = Separa por ; os itens da tabela.
dados

dados.head(10) # Mostra as 10 primeiras linhas da tabela.

dados.tail(10) # Mostra as 10 últimas linhas da tabela.

type(dados) # Mostra o tipo da tabela.

"""## Características gerais da base de dados"""

dados.shape # Mostra a quantidade de linhas e colunas da tabela.

dados.columns # Mostra as colunas da tabela.

dados.info()

dados['Tipo'] # Mostra apenas a coluna Tipo, os dados dessa coluna são texto, logo, object pode também conter strings.

dados[['Quartos', 'Valor']] # Mostra apenas as colunas Quartos e Valor.
                            # Os dados dessas colunas são do tipo decimal e inteiro, logo, INT representa os números inteiros
                            # e FLOAT representa os números decimais.

"""# Análise exploratória de dados (AULA 2)

## Qual o valor médio de aluguel por tipo de imóvel?
"""

dados.head()

dados['Valor'].mean() # Mostra o valor médio de aluguel.

dados.groupby('Tipo').mean(numeric_only=True) # Mostra o valor médio de aluguel por tipo de imóvel.

dados.groupby('Tipo')['Valor'].mean() # Mostra o valor médio de aluguel por tipo de imóvel.

dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor') # Mostra o valor médio de aluguel por tipo de imóvel.
                                                             # Transforma 'Valor' em um Data Frame.

df_preco_tipo = dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor') # Mostra o valor médio de aluguel por tipo de imóvel e atribui ele a váriavel
                                                                             # df_preco_tipo.

df_preco_tipo.plot(kind='barh', figsize=(14, 10), color='purple') # Plota o gráfico do valor médio de aluguel por tipo de imóvel.

"""## Removendo os imóveis comerciais"""

dados.Tipo.unique() # Mostra os tipos de imóveis.

imoveis_comerciais = ['Conjunto Comercial/Sala',
                      'Prédio Inteiro', 'Loja/Salão',
                      'Galpão/Depósito/Armazém',
                      'Casa Comercial', 'Terreno Padrão',
                      'Loja Shopping/ Ct Comercial',
                      'Box/Garagem', 'Chácara',
                      'Loteamento/Condomínio', 'Sítio',
                      'Pousada/Chalé', 'Hotel', 'Indústria'] # Cria uma váriavel com os tipos de imóveis comerciais.

imoveis_comerciais

dados.query('@imoveis_comerciais in Tipo') # Cria uma tabela com os tipos de imóveis comerciais.

dados.query('@imoveis_comerciais not in Tipo') # Cria uma tabela com os tipos de imóveis não comerciais.

df_imoveis_residenciais = dados.query('@imoveis_comerciais not in Tipo') # Cria uma tabela com os tipos de imóveis não comerciais e atribui ele a váriavel.
df_imoveis_residenciais.head()

df_imoveis_residenciais.Tipo.unique()

df_preco_tipo = df_imoveis_residenciais.groupby('Tipo')[['Valor']].mean().sort_values('Valor') # Mostra o valor médio de aluguel por tipo de imóvel.
                                                                                             # Transforma 'Valor' em um Data Frame.
df_preco_tipo.plot(kind='barh', figsize=(14, 10), color='purple')
plt.title('Valor médio de aluguel por tipo de imóvel')
plt.xlabel('Valor')
plt.ylabel('Tipo')

"""## Qual o percentual de cada tipo de imóvel na nossa base de dados?"""

df_imoveis_residenciais.Tipo.unique()

df_imoveis_residenciais.Tipo.value_counts(normalize=True) # Mostra a quantidade de cada tipo de imóvel na nossa base de dados.
                                                          # normalize=True = Mostra o percentual de cada tipo de imóvel na nossa base de dados.

df_imoveis_residenciais.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo' , ascending=False)  # Mostra o percentual de cada tipo de imóvel na nossa base de dados.
                                                                                                            # .sort_values('Tipo' , ascending=False) = Transforma 'Tipo' em um Data Frame e ordena ele do menor para o maior.

df_percentual_tipo = df_imoveis_residenciais.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo' , ascending=False)

df_percentual_tipo.plot(kind='bar', figsize=(14, 10), color='green') # Plota o gráfico do percentual de cada tipo de imóvel na nossa base de dados.
plt.title('Percentual de cada tipo de imóvel na nossa base de dados')
plt.xlabel('Tipos')
plt.ylabel('Percentual')

"""### **Selecionando apenas os imóveis do tipo apartamento**"""

df_imoveis_residenciais.query('Tipo == "Apartamento"') # Mostra apenas os imóveis do tipo apartamento.

df_apartamentos = df_imoveis_residenciais.query('Tipo == "Apartamento"') # Mostra apenas os imóveis do tipo apartamento e atribui ele a váriavel.
                                                                         # df_apartamentos.
df_apartamentos.head()

"""# Tratando e filtrando os dados (AULA 3)

## Lidando com dados nulos
"""













"""## Removendo registros"""



















"""## Filtros

### **1. Apartamentos que possuem `1 quarto` e `aluguel menor que 1200`**
"""











"""### **2. `Apartamentos` que possuem pelo menos `2 quartos`, `aluguel menor que 3000` e `area maior que 70`**"""





"""## Salvando os dados"""

















"""# Manipulando os dados

## Criando colunas numéricas
"""







"""## Criando colunas categóricas"""









